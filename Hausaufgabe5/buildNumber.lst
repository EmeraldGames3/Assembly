     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  global start     
     4                                     
     5                                  extern exit, printf               
     6                                  import exit msvcrt.dll                 
     7                                  import printf msvcrt.dll                 
     8                                  
     9                                  segment data use32 class=data
    10 00000000 323030303030303030-         s db "2000000000"
    10 00000009 30                 
    11                                      l equ $-s
    12 0000000A 256400                      format db "%d", 0
    13                                  
    14                                  ; our code starts here
    15                                  segment code use32 class=code
    16                                      start:
    17 00000000 B800000000                      mov eax, 0
    18 00000005 BB00000000                      mov ebx, 0
    19 0000000A BE00000000                      mov esi, 0
    20 0000000F B90A000000                      mov ecx, 10
    21                                          
    22                                          while:
    23 00000014 83FE0A                              cmp esi, l
    24 00000017 7415                                je end
    25                                      
    26 00000019 BB00000000                          mov ebx, 0
    27 0000001E 8A9E[00000000]                      mov bl, [s + esi]
    28 00000024 80EB30                              sub bl, '0'
    29                                              
    30 00000027 F7E1                                mul ecx; edx:eax = eax * 10
    31                                              
    32 00000029 01D8                                add eax, ebx
    33                                              
    34 0000002B 46                                  inc esi
    35 0000002C EBE6                                jmp while
    36                                              
    37                                          end:
    38 0000002E 50                                  push eax
    39 0000002F 68[0A000000]                        push dword format
    40 00000034 FF15[00000000]                      call [printf]
    41 0000003A 83C40C                              add esp, 4*3
    42                                          
    43 0000003D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    44 0000003F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
