     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, printf              
     6                                  import exit msvcrt.dll    
     7                                  import printf msvcrt.dll   
     8                                  
     9                                  ; our data is declared here (the variables needed by our program)
    10                                  segment data use32 class=data
    11 00000000 3132332434                  s db "123$4"
    12                                      l equ $-s
    13 00000005 4E756D6265723A2025-         format db "Number: %d", 0Ah, 0
    13 0000000E 640A00             
    14                                  
    15                                  ; our code starts here
    16                                  segment code use32 class=code
    17                                      start:
    18 00000000 B800000000                      mov eax, 0
    19 00000005 BB00000000                      mov ebx, 0
    20 0000000A BE00000000                      mov esi, 0
    21 0000000F B90A000000                      mov ecx, 10
    22                                          
    23                                          while:
    24 00000014 83FE05                              cmp esi, l
    25 00000017 7436                                je end
    26                                      
    27 00000019 BB00000000                          mov ebx, 0
    28 0000001E 8A9E[00000000]                      mov bl, [s + esi]
    29                                              
    30 00000024 80FB30                              cmp bl, '0'
    31 00000027 7C0F                                jl notNumber
    32 00000029 80FB39                              cmp bl, '9'
    33 0000002C 770A                                ja notNumber
    34                                              
    35                                              isNumber:
    36 0000002E 80EB30                                  sub bl, '0'
    37 00000031 F7E1                                    mul ecx; edx:eax = eax * 10
    38 00000033 01D8                                    add eax, ebx
    39                                                  
    40 00000035 46                                      inc esi
    41 00000036 EBDC                                    jmp while
    42                                                  
    43                                              notNumber:
    44 00000038 50                                      push eax
    45 00000039 68[05000000]                            push dword format
    46 0000003E FF15[00000000]                          call [printf]
    47 00000044 83C40C                                  add esp, 4*3
    48 00000047 B800000000                              mov eax, 0
    49                                              
    50 0000004C 46                                      inc esi
    51 0000004D EBC5                                    jmp while
    52                                              
    53                                          end:
    54 0000004F 50                                  push eax
    55 00000050 68[05000000]                        push dword format
    56 00000055 FF15[00000000]                      call [printf]
    57 0000005B 83C40C                              add esp, 4*3
    58                                          
    59 0000005E 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    60 00000060 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
