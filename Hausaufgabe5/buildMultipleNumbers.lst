     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit, printf              
     6                                  import exit msvcrt.dll    
     7                                  import printf msvcrt.dll   
     8                                  
     9                                  segment data use32 class=data
    10 00000000 31323324342A                s db "123$4*"
    11                                      l equ $-s
    12 00000006 4E756D6265723A2025-         format db "Number: %d", 0Ah, 0
    12 0000000F 640A00             
    13                                  
    14                                  segment code use32 class=code
    15                                      start:
    16 00000000 B800000000                      mov eax, 0
    17 00000005 BB00000000                      mov ebx, 0
    18 0000000A BE00000000                      mov esi, 0
    19 0000000F B90A000000                      mov ecx, 10
    20                                          
    21                                          while:
    22 00000014 83FE06                              cmp esi, l
    23 00000017 7436                                je end
    24                                      
    25 00000019 BB00000000                          mov ebx, 0
    26 0000001E 8A9E[00000000]                      mov bl, [s + esi]
    27                                              
    28 00000024 80FB30                              cmp bl, '0'
    29 00000027 7C0F                                jl notNumber
    30 00000029 80FB39                              cmp bl, '9'
    31 0000002C 770A                                ja notNumber
    32                                              
    33                                              isNumber:
    34 0000002E 80EB30                                  sub bl, '0'
    35 00000031 F7E1                                    mul ecx; edx:eax = eax * 10
    36 00000033 01D8                                    add eax, ebx
    37                                                  
    38 00000035 46                                      inc esi
    39 00000036 EBDC                                    jmp while
    40                                                  
    41                                              notNumber:
    42 00000038 50                                      push eax
    43 00000039 68[06000000]                            push dword format
    44 0000003E FF15[00000000]                          call [printf]
    45 00000044 83C40C                                  add esp, 4*3
    46 00000047 B800000000                              mov eax, 0
    47                                              
    48 0000004C 46                                      inc esi
    49 0000004D EBC5                                    jmp while
    50                                              
    51                                          end:
    52 0000004F 83F800                              cmp eax, 0
    53 00000052 740F                                je dontPrit
    54                                          
    55 00000054 50                                  push eax
    56 00000055 68[06000000]                        push dword format
    57 0000005A FF15[00000000]                      call [printf]
    58 00000060 83C40C                              add esp, 4*3
    59                                              
    60                                              dontPrit:
    61                                          
    62 00000063 6A00                            push    dword 0
    63 00000065 FF15[00000000]                  call    [exit]
