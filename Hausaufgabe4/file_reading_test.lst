     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fread, printf
     8                                  import exit msvcrt.dll    
     9                                  import printf msvcrt.dll    
    10                                  import fopen msvcrt.dll    
    11                                  import fclose msvcrt.dll    
    12                                  import fread msvcrt.dll    
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 696E7075742E747874-         fileName db "input.txt", 0
    16 00000009 00                 
    17 0000000A 7200                        accesMode db "r", 0
    18 0000000C FFFFFFFF                    fileDescriptor dd -1
    19 00000010 00000000                    readCharacters dd 0
    20                                      len equ 100
    21 00000014 00<rept>                    buffer times (len + 1) db 0
    22 00000079 257300                      format db "%s", 0
    23                                  
    24                                  ; our code starts here
    25                                  segment code use32 class=code
    26                                      start:
    27                                          
    28 00000000 68[0A000000]                    push dword accesMode
    29 00000005 68[00000000]                    push dword fileName
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4*2
    32                                          
    33 00000013 83F800                          cmp eax, 0
    34 00000016 7437                            je end
    35                                          
    36 00000018 A3[0C000000]                    mov [fileDescriptor], eax
    37                                          
    38                                          while:
    39                                          
    40 0000001D FF35[0C000000]                  push dword [fileDescriptor]
    41 00000023 6A64                            push dword len
    42 00000025 6A01                            push dword 1
    43 00000027 68[14000000]                    push dword buffer
    44 0000002C FF15[00000000]                  call [fread]
    45 00000032 83C410                          add esp, 4*4
    46                                          
    47 00000035 83F800                          cmp eax, 0
    48 00000038 7415                            je end
    49                                          
    50 0000003A 68[14000000]                    push dword buffer
    51 0000003F 68[79000000]                    push dword format
    52 00000044 FF15[00000000]                  call [printf]
    53 0000004A 83C408                          add esp, 4*2
    54                                          
    55 0000004D EBCE                            jmp while
    56                                          
    57                                      end:
    58                                          
    59 0000004F 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    60 00000051 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
