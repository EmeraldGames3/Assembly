     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit, fopen, fclose, fread, printf
     8                                  import exit msvcrt.dll    
     9                                  import printf msvcrt.dll    
    10                                  import fopen msvcrt.dll    
    11                                  import fclose msvcrt.dll    
    12                                  import fread msvcrt.dll    
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16 00000000 696E7075742E747874-         fileName db "input.txt", 0
    16 00000009 00                 
    17 0000000A 7200                        accesMode db "r", 0
    18 0000000C FFFFFFFF                    fileDescriptor dd -1
    19 00000010 00000000                    readCharacters dd 0
    20                                      len equ 100
    21 00000014 00<rept>                    buffer times (len + 1) db 0
    22 00000079 257300                      format db "%s", 0
    23 0000007C 546865726520617265-         format2 db "There are %d decimals", 0
    23 00000085 20256420646563696D-
    23 0000008E 616C7300           
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 B800000000                      mov eax, 0
    29 00000005 BB00000000                      mov ebx, 0
    30 0000000A B900000000                      mov ecx, 0
    31 0000000F BA00000000                      mov edx, 0
    32                                          
    33 00000014 68[0A000000]                    push dword accesMode
    34 00000019 68[00000000]                    push dword fileName
    35 0000001E FF15[00000000]                  call [fopen]
    36 00000024 83C408                          add esp, 4*2
    37                                          
    38 00000027 83F800                          cmp eax, 0
    39 0000002A 7459                            je end
    40                                          
    41 0000002C A3[0C000000]                    mov [fileDescriptor], eax
    42                                          
    43                                          whileReadFromFile:
    44                                          
    45 00000031 FF35[0C000000]                      push dword [fileDescriptor]
    46 00000037 6A64                                push dword len
    47 00000039 6A01                                push dword 1
    48 0000003B 68[14000000]                        push dword buffer
    49 00000040 FF15[00000000]                      call [fread]
    50 00000046 83C410                              add esp, 4*4
    51                                          
    52 00000049 83F800                              cmp eax, 0
    53 0000004C 7437                                je end
    54                                              
    55 0000004E 68[14000000]                        push dword buffer
    56 00000053 68[79000000]                        push dword format
    57 00000058 FF15[00000000]                      call [printf]
    58 0000005E 83C408                              add esp, 4*2
    59                                              
    60 00000061 BE00000000                              mov esi, 0
    61                                              
    62                                                  while:
    63 00000066 BA00000000                                  mov edx, 0
    64 0000006B 8A96[14000000]                              mov dl, [buffer + esi]
    65                                              
    66 00000071 80FA30                                      cmp dl, '0'
    67 00000074 7206                                        jb nichtZiffer
    68                                              
    69 00000076 80FA39                                      cmp dl, '9'
    70 00000079 7F01                                        jg nichtZiffer
    71                                              
    72 0000007B 43                                          inc ebx
    73                                              
    74                                                      nichtZiffer:
    75                                              
    76 0000007C 46                                          inc esi
    77 0000007D 39C6                                        cmp esi, eax
    78 0000007F 74B0                                        je whileReadFromFile
    79                                              
    80 00000081 EBE3                                    jmp while
    81                                          
    82 00000083 EBAC                            jmp whileReadFromFile
    83                                          
    84                                      end:
    85                                      
    86 00000085 53                              push dword ebx
    87 00000086 68[7C000000]                    push dword format2
    88 0000008B FF15[00000000]                  call [printf]
    89 00000091 83C408                          add esp, 4*2
    90                                          
    91 00000094 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    92 00000096 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
